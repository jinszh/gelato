package gelato;

import gelato.leet8.*;
import gelato.util.Util;
import org.junit.Test;

public class lee8 extends LeetTests{
    @Test
    public void test816() {
        ambiguousCoordinates t = new ambiguousCoordinates();
        print(t.ambiguousCoordinates("(12890210)"));
    }
    @Test
    public void test838() {
        pushDominoes t = new pushDominoes();
        print(t.pushDominoes(".L.R...LR..L.."));
    }
    @Test
    public void test853() {
        carFleet t = new carFleet();
        print(t.carFleet(548316
                , Util.get1dIntArray("[93804,58951,280346,467697,68470,313439,383522,28369,445136,202920,109370,295564,351332,416919,75178,543998,261890,258739,299735,190499,68062,467322,543311,205807,507287,428095,100903,314472,356956,342100,430894,291202,174858,171115,251506,293650,177868,108878,130546,163890,522482,353322,252623,468839,409297,518052,70551,544273,473595,543298,487462,477369,26501,454369,87861,63238,342566,226818,276918,325552,253372,218159,398640,123034,339893,15088,392717,510602,146428,411252,411089,382369,399620,357127,82032,129184,15013,191635,469825,215919,8421,520838,332832,514415,404051,251808,218301,300716,496859,235083,267923,467919,395679,245084,326464,236350,158632,484527,306157,388454]")
                , Util.get1dIntArray("[40371,595563,665604,412154,926012,46441,676135,64127,930294,228417,292547,736300,423489,449172,481540,759363,954246,338984,260385,142666,646690,59730,101287,672144,943203,918288,231511,911667,378587,106223,234953,276628,217367,777457,992337,208758,211838,851798,45033,369839,620830,73094,586072,941531,931213,144010,982180,334862,826457,765057,305300,114987,169055,932405,770234,829165,90332,846855,767587,904519,127870,644931,960672,413359,54014,481180,653521,753476,453542,617917,35480,327101,510622,826751,832456,783607,314438,952363,977001,402116,950815,636554,332154,384515,407610,759061,755019,761412,492615,194556,392856,247159,930782,192891,559602,939023,424367,31318,10961,516515]")));
    }

    @Test
    public void test870() {
        advantageCount t = new advantageCount();
        int [] n = t.advantageCount(Util.get1dIntArray("[28,47,45,8,2,10,25,35,43,37,33,30,33,20,33,42,43,36,34,3,16,23,15,10,19,42,13,47,0,21,36,38,0,5,3,28,4,20,14,5,19,22,29,17,3,16,35,0,26,0]")
                , Util.get1dIntArray("[44,10,27,4,27,40,46,40,45,0,41,2,44,50,36,30,37,4,44,4,12,13,35,20,19,25,38,42,43,14,2,4,5,38,4,38,0,35,12,32,38,33,3,1,19,46,23,13,24,41]"));
        print(n);
    }

    @Test
    public void test875() {
        minEatingSpeed t = new minEatingSpeed();
        int n = t.minEatingSpeed_my(Util.get1dIntArray("\n" +
                "[142126477]"), 142126479);
        print(n);
    }

    @Test
    public void test877() {
        minEatingSpeed t = new minEatingSpeed();
        int n = t.minEatingSpeed_my(Util.get1dIntArray("\n" +
                "[142126477]"), 142126479);
        print(n);
    }

    @Test
    public void test880() {
        decodeAtIndex t = new decodeAtIndex();
        print(t.decodeAtIndex("a2b", 3));
    }
    @Test
    public void test898() {
        subarrayBitwiseORs t = new subarrayBitwiseORs();
        print(t.subarrayBitwiseORs(Util.get1dIntArray("[1,2,4]")));
    }
}
